{"documentCount":22,"nextId":22,"documentIds":{"0":"docs/pages/example.md#stone-packaging-example","1":"docs/pages/getting-started.md#getting-started-with-stone-packaging","2":"docs/pages/index.md#stone-packaging","3":"docs/pages/resourcers.md#stone-packaging-resources","4":"docs/pages/install/binaries.md#stone-packaging---installation-guide","5":"docs/pages/install/binaries.md#supported-architectures","6":"docs/pages/install/binaries.md#download-and-install-binaries","7":"docs/pages/install/binaries.md#for-macos-arm64","8":"docs/pages/install/binaries.md#for-linux-x86_64","9":"docs/pages/install/binaries.md#adding-stone-binaries-to-the-system-path","10":"docs/pages/install/binaries.md#verifying-installation","11":"docs/pages/install/docker.md#getting-stone-docker-images","12":"docs/pages/install/docker.md#available-images","13":"docs/pages/install/docker.md#prover-image-lightweight","14":"docs/pages/install/docker.md#verifier-image-lightweight","15":"docs/pages/install/docker.md#combined-image","16":"docs/pages/install/docker.md#accessing-the-images","17":"docs/pages/install/docker.md#pulling-the-images","18":"docs/pages/usage/verifying.md#verifying-stone-proof-using-the-binary","19":"docs/pages/usage/verifying.md#creating-and-verifying-a-test-proof-using-binaries","20":"docs/pages/usage/verifying.md#download-minimal-docker-images-for-x86_64","21":"docs/pages/usage/verifying.md#creating-and-verifying-a-test-proof-using-docker"},"fieldIds":{"title":0,"titles":1,"text":2},"fieldLength":{"0":[3,1,12],"1":[5,1,1],"2":[2,1,18],"3":[3,1,148],"4":[4,1,24],"5":[2,4,14],"6":[4,4,1],"7":[4,8,53],"8":[5,8,55],"9":[7,4,70],"10":[2,10,30],"11":[4,1,25],"12":[2,4,1],"13":[4,5,15],"14":[4,5,13],"15":[2,5,16],"16":[3,4,12],"17":[3,4,34],"18":[6,1,31],"19":[8,6,60],"20":[7,6,22],"21":[8,6,87]},"averageFieldLength":[4.181818181818182,4.090909090909091,33.72727272727273],"storedFields":{"0":{"href":"/example#stone-packaging-example","html":"</header>\n<p>Here&#x27;s an example of how to use Stone Packaging...</p>","isPage":true,"text":"\nHere&#x27;s an example of how to use Stone Packaging...","title":"Stone Packaging Example","titles":[]},"1":{"href":"/getting-started#getting-started-with-stone-packaging","html":"</header>\n<p>...</p>","isPage":true,"text":"\n...","title":"Getting Started with Stone Packaging","titles":[]},"2":{"href":"/index#stone-packaging","html":"</header>\n<p>This is the main page of Stone Packaging documentation.</p>\n<p>Here&#x27;s an example of how to use Stone Packaging...</p>","isPage":true,"text":"\nThis is the main page of Stone Packaging documentation.\nHere&#x27;s an example of how to use Stone Packaging...","title":"Stone Packaging","titles":[]},"3":{"href":"/resourcers#stone-packaging-resources","html":"</header>\n<table><thead><tr><th>Resource</th><th>Description</th></tr></thead><tbody><tr><td><strong><a href=\"https://github.com/Moonsong-Labs/madara-prover-api\">Madara Prover API</a></strong></td><td>This project provides a server capable of executing any set of Cairo programs on top of the Starknet bootloader and generate the proof of execution of these programs. This server is used as part of the Madara sequencer to prove the transactions inside each (Madara) block</td></tr><tr><td><strong><a href=\"https://github.com/Moonsong-Labs/stone-prover-sdk\">Stone Prover SDK</a></strong></td><td>Is a <strong>Rust SDK</strong> for the Starkware Stone prover and verifier. To use this SDK, you will need the Stone prover and verifier binaries. You can either follow the instructions on the <a href=\"https://github.com/starkware-libs/stone-prover\">Stone repository</a>, download them from the <a href=\"https://github.com/Moonsong-Labs/stone-prover-sdk/releases/tag/v0.3.1\">latest SDK release.</a></td></tr><tr><td><strong><a href=\"https://github.com/zksecurity/stone-cli\">Stone CLI</a></strong></td><td>A <strong>CLI</strong> for proving Cairo programs and verifying and serializing Cairo proofs.</td></tr><tr><td><strong><a href=\"https://github.com/zksecurity/stark-evm-adapter\">Stark EVM Adapter</a></strong></td><td>stark-evm-adapter is a library that provides a set of utilities to parse and manipulate the output of the <strong>STARK</strong> stone proof. Specifically, the library can be used to generate a &quot;split proof&quot;, which is necessary for proofs to be verified on Ethereum.</td></tr><tr><td><strong><a href=\"https://github.com/HerodotusDev/integrity-calldata-generator\">Integrity Calldata Generator</a></strong></td><td>This is a utility that helps generate integrity calldata, which keeps our data safe and reliable.</td></tr><tr><td><strong><a href=\"https://github.com/cartridge-gg/cairo-proof-parser\">Cairo Proof Parser</a></strong></td><td>This lib crate is a parser written to translate beetwen different cairo proof formats. The input to the parse function is a proof in a json string format. The proof is expected to be generated by the stone prover with the -generate_annotations flag. Currently only the recursive and starknet layouts are supported.</td></tr><tr><td><strong><a href=\"https://zksecurity.github.io/stark-book/\">Stark Book</a></strong></td><td>This is the Starknet documentation where you can read and learn about it. If you want to delve deeper into Starknet you can check this <a href=\"https://docs.starknet.io/\">resource.</a></td></tr></tbody></table>","isPage":true,"text":"\nResourceDescriptionMadara Prover APIThis project provides a server capable of executing any set of Cairo programs on top of the Starknet bootloader and generate the proof of execution of these programs. This server is used as part of the Madara sequencer to prove the transactions inside each (Madara) blockStone Prover SDKIs a Rust SDK for the Starkware Stone prover and verifier. To use this SDK, you will need the Stone prover and verifier binaries. You can either follow the instructions on the Stone repository, download them from the latest SDK release.Stone CLIA CLI for proving Cairo programs and verifying and serializing Cairo proofs.Stark EVM Adapterstark-evm-adapter is a library that provides a set of utilities to parse and manipulate the output of the STARK stone proof. Specifically, the library can be used to generate a &quot;split proof&quot;, which is necessary for proofs to be verified on Ethereum.Integrity Calldata GeneratorThis is a utility that helps generate integrity calldata, which keeps our data safe and reliable.Cairo Proof ParserThis lib crate is a parser written to translate beetwen different cairo proof formats. The input to the parse function is a proof in a json string format. The proof is expected to be generated by the stone prover with the -generate_annotations flag. Currently only the recursive and starknet layouts are supported.Stark BookThis is the Starknet documentation where you can read and learn about it. If you want to delve deeper into Starknet you can check this resource.","title":"Stone Packaging Resources","titles":[]},"4":{"href":"/install/binaries#stone-packaging---installation-guide","html":"</header>\n<p>This guide provides detailed instructions on how to download and install the <a href=\"https://github.com/starkware-libs/stone-prover\">Stone</a> binaries, based on your operating system (OS) and architecture so follow along.</p>\n","isPage":true,"text":"\nThis guide provides detailed instructions on how to download and install the Stone binaries, based on your operating system (OS) and architecture so follow along.\n","title":"Stone Packaging - Installation Guide","titles":[]},"5":{"href":"/install/binaries#supported-architectures","html":"\n<p>Stone binaries are available for the following architectures:</p>\n<ul>\n<li>\n<strong>x86_64 Linux</strong>\n</li>\n<li>\n<strong>ARM64 macOS</strong>\n</li>\n</ul>\n","isPage":false,"text":"\nStone binaries are available for the following architectures:\n\n\nx86_64 Linux\n\n\nARM64 macOS\n\n\n","title":"Supported Architectures","titles":["Stone Packaging - Installation Guide"]},"6":{"href":"/install/binaries#download-and-install-binaries","html":"\n","isPage":false,"text":"\n","title":"Download and Install Binaries","titles":["Stone Packaging - Installation Guide"]},"7":{"href":"/install/binaries#for-macos-arm64","html":"\n<ol>\n<li>Download the cpu_air_prover and cpu_air_verifier binaries:</li>\n</ol>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">wget</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> https://github.com/dipdup-io/stone-packaging/releases/latest/download/cpu_air_prover-arm64</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> -O</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> /usr/local/bin/cpu_air_prover</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">wget</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> https://github.com/dipdup-io/stone-packaging/releases/latest/download/cpu_air_verifier-arm64</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> -O</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> /usr/local/bin/cpu_air_verifier</span></span></code></pre>\n<ol start=\"2\">\n<li>Make the binaries executable:</li>\n</ol>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">chmod</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> +x</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> /usr/local/bin/cpu_air_prover</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">chmod</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> +x</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> /usr/local/bin/cpu_air_verifier</span></span></code></pre>\n<ol start=\"3\">\n<li>Move the binaries to /usr/bin for system-wide access (optional):</li>\n</ol>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sudo</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> mv</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> /usr/local/bin/cpu_air_prover</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> /usr/bin/</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sudo</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> mv</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> /usr/local/bin/cpu_air_verifier</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> /usr/bin/</span></span></code></pre>\n<p>This step is optional but recommended if you want to make the binaries globally available without adding /usr/local/bin to your PATH.</p>\n","isPage":false,"text":"\n\nDownload the cpu_air_prover and cpu_air_verifier binaries:\n\nwget https://github.com/dipdup-io/stone-packaging/releases/latest/download/cpu_air_prover-arm64 -O /usr/local/bin/cpu_air_prover\nwget https://github.com/dipdup-io/stone-packaging/releases/latest/download/cpu_air_verifier-arm64 -O /usr/local/bin/cpu_air_verifier\n\nMake the binaries executable:\n\nchmod +x /usr/local/bin/cpu_air_prover\nchmod +x /usr/local/bin/cpu_air_verifier\n\nMove the binaries to /usr/bin for system-wide access (optional):\n\nsudo mv /usr/local/bin/cpu_air_prover /usr/bin/\nsudo mv /usr/local/bin/cpu_air_verifier /usr/bin/\nThis step is optional but recommended if you want to make the binaries globally available without adding /usr/local/bin to your PATH.\n","title":"For macOS (ARM64)","titles":["Stone Packaging - Installation Guide","Download and Install Binaries"]},"8":{"href":"/install/binaries#for-linux-x86_64","html":"\n<ol>\n<li>Download the <code>cpu_air_prover</code> and <code>cpu_air_verifier</code> binaries:</li>\n</ol>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sudo</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> wget</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> https://github.com/dipdup-io/stone-packaging/releases/latest/download/cpu_air_prover-x86_64</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> -O</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> /usr/local/bin/cpu_air_prover</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sudo</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> wget</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> https://github.com/dipdup-io/stone-packaging/releases/latest/download/cpu_air_verifier-x86_64</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> -O</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> /usr/local/bin/cpu_air_verifier</span></span></code></pre>\n<ol start=\"2\">\n<li>Make the binaries executable:</li>\n</ol>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sudo</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> chmod</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> +x</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> /usr/local/bin/cpu_air_prover</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sudo</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> chmod</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> +x</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> /usr/local/bin/cpu_air_verifier</span></span></code></pre>\n<ol start=\"3\">\n<li>Move the binaries to /usr/bin for system-wide access (optional):</li>\n</ol>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sudo</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> mv</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> /usr/local/bin/cpu_air_prover</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> /usr/bin/</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">sudo</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> mv</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> /usr/local/bin/cpu_air_verifier</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> /usr/bin/</span></span></code></pre>\n<p>This step is actually optional but recommended if you want to make the binaries globally available without adding /usr/local/bin to your PATH.</p>\n","isPage":false,"text":"\n\nDownload the cpu_air_prover and cpu_air_verifier binaries:\n\nsudo wget https://github.com/dipdup-io/stone-packaging/releases/latest/download/cpu_air_prover-x86_64 -O /usr/local/bin/cpu_air_prover\nsudo wget https://github.com/dipdup-io/stone-packaging/releases/latest/download/cpu_air_verifier-x86_64 -O /usr/local/bin/cpu_air_verifier\n\nMake the binaries executable:\n\nsudo chmod +x /usr/local/bin/cpu_air_prover\nsudo chmod +x /usr/local/bin/cpu_air_verifier\n\nMove the binaries to /usr/bin for system-wide access (optional):\n\nsudo mv /usr/local/bin/cpu_air_prover /usr/bin/\nsudo mv /usr/local/bin/cpu_air_verifier /usr/bin/\nThis step is actually optional but recommended if you want to make the binaries globally available without adding /usr/local/bin to your PATH.\n","title":"For Linux (x86_64)","titles":["Stone Packaging - Installation Guide","Download and Install Binaries"]},"9":{"href":"/install/binaries#adding-stone-binaries-to-the-system-path","html":"\n<p>If you prefer to leave the binaries in /usr/local/bin or any other folder, you can add that folder to your system’s PATH variable. This will ensure that the binaries can be executed from any directory.</p>\n<ol>\n<li>Open your shell configuration file (e.g., .bashrc for bash, .zshrc for zsh):</li>\n</ol>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">nano</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> ~/.bashrc</span><span style=\"color:#6A737D;--shiki-dark:#768390\"> # for bash users</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">nano</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> ~/.zshrc</span><span style=\"color:#6A737D;--shiki-dark:#768390\"> # for zsh users</span></span></code></pre>\n<ol start=\"2\">\n<li>Add the following line to include /usr/local/bin in your PATH:</li>\n</ol>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#D73A49;--shiki-dark:#F47067\">export</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> PATH</span><span style=\"color:#D73A49;--shiki-dark:#F47067\">=</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;/usr/local/bin:</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\">$PATH</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\">&quot;</span></span></code></pre>\n<ol start=\"3\">\n<li>Save and close the file, then reload your shell to apply the changes:</li>\n</ol>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">source</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> ~/.bashrc</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> </span></span>\n<span class=\"line\"><span style=\"color:#6A737D;--shiki-dark:#768390\"># or</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">source</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> ~/.zshrc</span></span></code></pre>\n<p>This step ensures that binaries placed in /usr/local/bin can be accessed from anywhere in your system without needing to move them to /usr/bin.</p>\n","isPage":false,"text":"\nIf you prefer to leave the binaries in /usr/local/bin or any other folder, you can add that folder to your system’s PATH variable. This will ensure that the binaries can be executed from any directory.\n\nOpen your shell configuration file (e.g., .bashrc for bash, .zshrc for zsh):\n\nnano ~/.bashrc # for bash users\nnano ~/.zshrc # for zsh users\n\nAdd the following line to include /usr/local/bin in your PATH:\n\nexport PATH=&quot;/usr/local/bin:$PATH&quot;\n\nSave and close the file, then reload your shell to apply the changes:\n\nsource ~/.bashrc \n# or\nsource ~/.zshrc\nThis step ensures that binaries placed in /usr/local/bin can be accessed from anywhere in your system without needing to move them to /usr/bin.\n","title":"Adding Stone Binaries to the System PATH","titles":["Stone Packaging - Installation Guide"]},"10":{"href":"/install/binaries#verifying-installation","html":"\n<p>After placing the binaries or updating the PATH, you can verify the installation by running:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">cpu_air_prover</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --help</span></span>\n<span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">cpu_air_verifier</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --help</span></span></code></pre>\n<p>If you see usage information, then the installation is successful. Hope you&#x27;re smilling.</p>","isPage":false,"text":"\nAfter placing the binaries or updating the PATH, you can verify the installation by running:\ncpu_air_prover --help\ncpu_air_verifier --help\nIf you see usage information, then the installation is successful. Hope you&#x27;re smilling.","title":"Verifying Installation","titles":["Stone Packaging - Installation Guide","Adding Stone Binaries to the System PATH"]},"11":{"href":"/install/docker#getting-stone-docker-images","html":"</header>\n<p>Stone provides Docker images to simplify the deployment and usage of its prover and verifier components. There are currently three available images, hosted on GitHub Packages.</p>\n","isPage":true,"text":"\nStone provides Docker images to simplify the deployment and usage of its prover and verifier components. There are currently three available images, hosted on GitHub Packages.\n","title":"Getting Stone Docker Images","titles":[]},"12":{"href":"/install/docker#available-images","html":"\n","isPage":false,"text":"\n","title":"Available Images","titles":["Getting Stone Docker Images"]},"13":{"href":"/install/docker#prover-image-lightweight","html":"\n<ul>\n<li>Contains only the Stone prover binary.</li>\n<li>Ideal for environments where only proving functionality is needed.</li>\n</ul>\n","isPage":false,"text":"\n\nContains only the Stone prover binary.\nIdeal for environments where only proving functionality is needed.\n\n","title":"Prover Image (Lightweight)","titles":["Getting Stone Docker Images","Available Images"]},"14":{"href":"/install/docker#verifier-image-lightweight","html":"\n<ul>\n<li>Contains only the Stone verifier binary.</li>\n<li>Perfect for setups requiring only verification capabilities.</li>\n</ul>\n","isPage":false,"text":"\n\nContains only the Stone verifier binary.\nPerfect for setups requiring only verification capabilities.\n\n","title":"Verifier Image (Lightweight)","titles":["Getting Stone Docker Images","Available Images"]},"15":{"href":"/install/docker#combined-image","html":"\n<ul>\n<li>Contains both the Stone prover and verifier binaries.</li>\n<li>Suitable for environments needing both proving and verification functionalities.</li>\n</ul>\n","isPage":false,"text":"\n\nContains both the Stone prover and verifier binaries.\nSuitable for environments needing both proving and verification functionalities.\n\n","title":"Combined Image","titles":["Getting Stone Docker Images","Available Images"]},"16":{"href":"/install/docker#accessing-the-images","html":"\n<p>You can find the Stone Docker images in the GitHub Packages repository:<br/>\n<a href=\"https://github.com/orgs/dipdup-io/packages?repo_name=stone-packaging\">GitHub Packages - Stone</a></p>\n","isPage":false,"text":"\nYou can find the Stone Docker images in the GitHub Packages repository:\nGitHub Packages - Stone\n","title":"Accessing the Images","titles":["Getting Stone Docker Images"]},"17":{"href":"/install/docker#pulling-the-images","html":"\n<p>To pull an image, use the <code>docker pull</code> command followed by the image name. Here are examples for each image:</p>\n<ul>\n<li>\n<strong>For the Stone Prover :</strong>\n</li>\n</ul>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">docker</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> pull</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> ghcr.io/dipdup-io/stone-packaging/stone-prover:master</span></span></code></pre>\n<ul>\n<li>\n<strong>For the CPU Air Prover (Lightweight):</strong>\n</li>\n</ul>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">docker</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> pull</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> ghcr.io/dipdup-io/stone-packaging/cpu_air_prover:master</span></span></code></pre>\n<ul>\n<li>\n<strong>For the CPU Air Verifier (Lightweight):</strong>\n</li>\n</ul>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">docker</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> pull</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> ghcr.io/dipdup-io/stone-packaging/cpu_air_verifier:master</span></span></code></pre>","isPage":false,"text":"\nTo pull an image, use the docker pull command followed by the image name. Here are examples for each image:\n\n\nFor the Stone Prover :\n\n\ndocker pull ghcr.io/dipdup-io/stone-packaging/stone-prover:master\n\n\nFor the CPU Air Prover (Lightweight):\n\n\ndocker pull ghcr.io/dipdup-io/stone-packaging/cpu_air_prover:master\n\n\nFor the CPU Air Verifier (Lightweight):\n\n\ndocker pull ghcr.io/dipdup-io/stone-packaging/cpu_air_verifier:master","title":"Pulling the Images","titles":["Getting Stone Docker Images"]},"18":{"href":"/usage/verifying#verifying-stone-proof-using-the-binary","html":"</header>\n<p>This guide will walk you through how to verify a Stone proof using the provided binaries. It includes steps for both setting up the environment using Docker and manually installing the required dependencies.</p>\n","isPage":true,"text":"\nThis guide will walk you through how to verify a Stone proof using the provided binaries. It includes steps for both setting up the environment using Docker and manually installing the required dependencies.\n","title":"Verifying Stone Proof Using the Binary","titles":[]},"19":{"href":"/usage/verifying#creating-and-verifying-a-test-proof-using-binaries","html":"\n<ul>\n<li>Clone the repository:</li>\n</ul>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">git</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> clone</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> https://github.com/dipdup-io/stone-packaging.git</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> /tmp/stone-packaging</span></span></code></pre>\n<ul>\n<li>Navigate to the example test directory</li>\n</ul>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">cd</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> /tmp/stone-packaging/test_files/</span></span></code></pre>\n<ul>\n<li>Download the Binary Files:</li>\n</ul>\n<p>To download binaries, please refer to the <a href=\"../install/binaries.md\">Installation Guide</a></p>\n<ul>\n<li>Run the prover:</li>\n</ul>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">cpu_air_prover</span><span style=\"color:#005CC5;--shiki-dark:#F47067\"> \\</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    --out_file=fibonacci_proof.json</span><span style=\"color:#005CC5;--shiki-dark:#F47067\"> \\</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    --private_input_file=fibonacci_private_input.json</span><span style=\"color:#005CC5;--shiki-dark:#F47067\"> \\</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    --public_input_file=fibonacci_public_input.json</span><span style=\"color:#005CC5;--shiki-dark:#F47067\"> \\</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    --prover_config_file=cpu_air_prover_config.json</span><span style=\"color:#005CC5;--shiki-dark:#F47067\"> \\</span></span>\n<span class=\"line\"><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">    --parameter_file=cpu_air_params.json</span></span></code></pre>\n<p>The proof will be available at <code>fibonacci_proof.json</code>.</p>\n<ul>\n<li>Run the verifier to verify the proof:</li>\n</ul>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">cpu_air_verifier</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --in_file=fibonacci_proof.json</span><span style=\"color:#24292E;--shiki-dark:#ADBAC7\"> &amp;&amp; </span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\">echo</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;Successfully verified example proof.&quot;</span></span></code></pre>\n","isPage":false,"text":"\n\nClone the repository:\n\ngit clone https://github.com/dipdup-io/stone-packaging.git /tmp/stone-packaging\n\nNavigate to the example test directory\n\ncd /tmp/stone-packaging/test_files/\n\nDownload the Binary Files:\n\nTo download binaries, please refer to the Installation Guide\n\nRun the prover:\n\ncpu_air_prover \\\n    --out_file=fibonacci_proof.json \\\n    --private_input_file=fibonacci_private_input.json \\\n    --public_input_file=fibonacci_public_input.json \\\n    --prover_config_file=cpu_air_prover_config.json \\\n    --parameter_file=cpu_air_params.json\nThe proof will be available at fibonacci_proof.json.\n\nRun the verifier to verify the proof:\n\ncpu_air_verifier --in_file=fibonacci_proof.json &amp;&amp; echo &quot;Successfully verified example proof.&quot;\n","title":"Creating and Verifying a Test Proof Using Binaries","titles":["Verifying Stone Proof Using the Binary"]},"20":{"href":"/usage/verifying#download-minimal-docker-images-for-x86_64","html":"\n<p>Download the Docker image. The stone-prover package includes both <code>cpu_air_prover</code> and <code>cpu_air_verifier</code>:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">docker</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> pull</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> ghcr.io/dipdup-io/stone-packaging/stone-prover:latest</span></span></code></pre>\n","isPage":false,"text":"\nDownload the Docker image. The stone-prover package includes both cpu_air_prover and cpu_air_verifier:\ndocker pull ghcr.io/dipdup-io/stone-packaging/stone-prover:latest\n","title":"Download Minimal Docker Images for x86_64","titles":["Verifying Stone Proof Using the Binary"]},"21":{"href":"/usage/verifying#creating-and-verifying-a-test-proof-using-docker","html":"\n<ul>\n<li>Ensure Docker is installed on your machine. You can refer to <a href=\"https://docs.docker.com/get-docker/\">Docker’s official documentation</a> for installation instructions.</li>\n</ul>\n<ol>\n<li>Clone the Repository:</li>\n</ol>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">git</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> clone</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> https://github.com/dipdup-io/stone-packaging.git</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> /tmp/stone-packaging</span></span></code></pre>\n<ol start=\"2\">\n<li>Run the Docker Container to Create the Proof</li>\n</ol>\n<p>Run the container with a volume mounted to the local repository directory:</p>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">docker</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> run</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --entrypoint</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> /bin/bash</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> -v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> /tmp/stone-packaging/test_files:/app/prover</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> ghcr.io/dipdup-io/stone-packaging/stone-prover</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> -c</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;cd /app/prover &amp;&amp; exec cpu_air_prover </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    --out_file=fibonacci_proof.json </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    --private_input_file=fibonacci_private_input.json </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    --public_input_file=fibonacci_public_input.json </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    --prover_config_file=cpu_air_prover_config.json </span><span style=\"color:#005CC5;--shiki-dark:#F47067\">\\</span></span>\n<span class=\"line\"><span style=\"color:#032F62;--shiki-dark:#96D0FF\">    --parameter_file=cpu_air_params.json&quot;</span></span></code></pre>\n<p>The proof will be created at <code>test_files/fibonacci_proof.json.</code>.</p>\n<ol start=\"3\">\n<li>Verify the Proof Using Docker</li>\n</ol>\n<pre class=\"shiki shiki-themes github-light github-dark-dimmed\" style=\"background-color:#fff;--shiki-dark-bg:#22272e;color:#24292e;--shiki-dark:#adbac7\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color:#6F42C1;--shiki-dark:#F69D50\">docker</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> run</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> --entrypoint</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> /bin/bash</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> -v</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> /tmp/stone-packaging/test_files:/app/prover</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> ghcr.io/dipdup-io/stone-packaging/stone-prover</span><span style=\"color:#005CC5;--shiki-dark:#6CB6FF\"> -c</span><span style=\"color:#032F62;--shiki-dark:#96D0FF\"> &quot;cd /app/prover &amp;&amp; exec cpu_air_verifier --in_file=fibonacci_proof.json &amp;&amp; echo &#x27;Successfully verified example proof.&#x27;&quot;</span></span></code></pre>","isPage":false,"text":"\n\nEnsure Docker is installed on your machine. You can refer to Docker’s official documentation for installation instructions.\n\n\nClone the Repository:\n\ngit clone https://github.com/dipdup-io/stone-packaging.git /tmp/stone-packaging\n\nRun the Docker Container to Create the Proof\n\nRun the container with a volume mounted to the local repository directory:\ndocker run --entrypoint /bin/bash -v /tmp/stone-packaging/test_files:/app/prover ghcr.io/dipdup-io/stone-packaging/stone-prover -c &quot;cd /app/prover &amp;&amp; exec cpu_air_prover \\\n    --out_file=fibonacci_proof.json \\\n    --private_input_file=fibonacci_private_input.json \\\n    --public_input_file=fibonacci_public_input.json \\\n    --prover_config_file=cpu_air_prover_config.json \\\n    --parameter_file=cpu_air_params.json&quot;\nThe proof will be created at test_files/fibonacci_proof.json..\n\nVerify the Proof Using Docker\n\ndocker run --entrypoint /bin/bash -v /tmp/stone-packaging/test_files:/app/prover ghcr.io/dipdup-io/stone-packaging/stone-prover -c &quot;cd /app/prover &amp;&amp; exec cpu_air_verifier --in_file=fibonacci_proof.json &amp;&amp; echo &#x27;Successfully verified example proof.&#x27;&quot;","title":"Creating and Verifying a Test Proof Using Docker","titles":["Verifying Stone Proof Using the Binary"]}},"dirtCount":0,"index":[["$path",{"2":{"9":1}}],["~",{"2":{"9":4}}],["navigate",{"2":{"19":1}}],["name",{"2":{"17":1}}],["nano",{"2":{"9":2}}],["necessary",{"2":{"3":1}}],["needed",{"2":{"13":1}}],["needing",{"2":{"9":1,"15":1}}],["need",{"2":{"3":1}}],["zsh",{"2":{"9":2}}],["zshrc",{"2":{"9":3}}],["v",{"2":{"21":2}}],["volume",{"2":{"21":1}}],["variable",{"2":{"9":1}}],["verification",{"2":{"14":1,"15":1}}],["verified",{"2":{"3":1,"19":1,"21":1}}],["verifier",{"0":{"14":1},"2":{"3":2,"7":5,"8":5,"10":1,"11":1,"14":1,"15":1,"17":2,"19":2,"20":1,"21":1}}],["verify",{"2":{"10":1,"18":1,"19":1,"21":1}}],["verifying",{"0":{"10":1,"18":1,"19":1,"21":1},"1":{"19":1,"20":1,"21":1},"2":{"3":1}}],["mounted",{"2":{"21":1}}],["move",{"2":{"7":1,"8":1,"9":1}}],["minimal",{"0":{"20":1}}],["mv",{"2":{"7":2,"8":2}}],["machine",{"2":{"21":1}}],["macos",{"0":{"7":1},"2":{"5":1}}],["manually",{"2":{"18":1}}],["manipulate",{"2":{"3":1}}],["master",{"2":{"17":3}}],["make",{"2":{"7":2,"8":2}}],["madara",{"2":{"3":2}}],["main",{"2":{"2":1}}],["+x",{"2":{"7":2,"8":2}}],["64",{"0":{"8":1,"20":1},"2":{"5":1,"8":2}}],["x86",{"0":{"8":1,"20":1},"2":{"5":1,"8":2}}],["x27",{"2":{"0":1,"2":1,"10":1,"21":2}}],["git",{"2":{"19":2,"21":2}}],["github",{"2":{"7":2,"8":2,"11":1,"16":2,"19":1,"21":1}}],["ghcr",{"2":{"17":3,"20":1,"21":2}}],["g",{"2":{"9":1}}],["globally",{"2":{"7":1,"8":1}}],["guide",{"0":{"4":1},"1":{"5":1,"6":1,"7":1,"8":1,"9":1,"10":1},"2":{"4":1,"18":1,"19":1}}],["generatorthis",{"2":{"3":1}}],["generated",{"2":{"3":1}}],["generate",{"2":{"3":4}}],["getting",{"0":{"1":1,"11":1},"1":{"12":1,"13":1,"14":1,"15":1,"16":1,"17":1}}],["json",{"2":{"3":1,"19":7,"21":7}}],["directory",{"2":{"9":1,"19":1,"21":1}}],["dipdup",{"2":{"7":2,"8":2,"17":3,"19":1,"20":1,"21":3}}],["different",{"2":{"3":1}}],["dependencies",{"2":{"18":1}}],["deployment",{"2":{"11":1}}],["detailed",{"2":{"4":1}}],["deeper",{"2":{"3":1}}],["delve",{"2":{"3":1}}],["data",{"2":{"3":1}}],["docker",{"0":{"11":1,"20":1,"21":1},"1":{"12":1,"13":1,"14":1,"15":1,"16":1,"17":1},"2":{"11":1,"16":1,"17":4,"18":1,"20":2,"21":6}}],["documentation",{"2":{"2":1,"3":1,"21":1}}],["download",{"0":{"6":1,"20":1},"1":{"7":1,"8":1},"2":{"3":1,"4":1,"7":3,"8":3,"19":2,"20":1}}],["keeps",{"2":{"3":1}}],["walk",{"2":{"18":1}}],["want",{"2":{"3":1,"7":1,"8":1}}],["wget",{"2":{"7":2,"8":2}}],["where",{"2":{"3":1,"13":1}}],["which",{"2":{"3":2}}],["written",{"2":{"3":1}}],["wide",{"2":{"7":1,"8":1}}],["will",{"2":{"3":1,"9":1,"18":1,"19":1,"21":1}}],["without",{"2":{"7":1,"8":1,"9":1}}],["with",{"0":{"1":1},"2":{"3":1,"21":1}}],["quot",{"2":{"3":2,"9":2,"19":2,"21":4}}],["up",{"2":{"18":1}}],["updating",{"2":{"10":1}}],["using",{"0":{"18":1,"19":1,"21":1},"1":{"19":1,"20":1,"21":1},"2":{"18":2,"21":1}}],["usage",{"2":{"10":1,"11":1}}],["usr",{"2":{"7":10,"8":10,"9":5}}],["users",{"2":{"9":2}}],["used",{"2":{"3":2}}],["use",{"2":{"0":1,"2":1,"3":1,"17":1}}],["utility",{"2":{"3":1}}],["utilities",{"2":{"3":1}}],["leave",{"2":{"9":1}}],["learn",{"2":{"3":1}}],["local",{"2":{"7":7,"8":7,"9":4,"21":1}}],["lightweight",{"0":{"13":1,"14":1},"2":{"17":2}}],["line",{"2":{"9":1}}],["linux",{"0":{"8":1},"2":{"5":1}}],["lib",{"2":{"3":1}}],["library",{"2":{"3":2}}],["layouts",{"2":{"3":1}}],["latest",{"2":{"3":1,"7":2,"8":2,"20":1}}],["c",{"2":{"21":2}}],["cd",{"2":{"19":1,"21":2}}],["created",{"2":{"21":1}}],["create",{"2":{"21":1}}],["creating",{"0":{"19":1,"21":1}}],["crate",{"2":{"3":1}}],["clone",{"2":{"19":2,"21":2}}],["close",{"2":{"9":1}}],["cli",{"2":{"3":1}}],["clia",{"2":{"3":1}}],["container",{"2":{"21":2}}],["contains",{"2":{"13":1,"14":1,"15":1}}],["config",{"2":{"19":2,"21":2}}],["configuration",{"2":{"9":1}}],["command",{"2":{"17":1}}],["combined",{"0":{"15":1}}],["components",{"2":{"11":1}}],["com",{"2":{"7":2,"8":2,"19":1,"21":1}}],["changes",{"2":{"9":1}}],["chmod",{"2":{"7":2,"8":2}}],["check",{"2":{"3":1}}],["cpu",{"2":{"7":10,"8":10,"10":2,"17":4,"19":2,"20":2,"21":2}}],["currently",{"2":{"3":1,"11":1}}],["capabilities",{"2":{"14":1}}],["capable",{"2":{"3":1}}],["calldata",{"2":{"3":2}}],["can",{"2":{"3":4,"9":3,"10":1,"16":1,"21":1}}],["cairo",{"2":{"3":5}}],["fibonacci",{"2":{"19":1,"21":1}}],["find",{"2":{"16":1}}],["file=cpu",{"2":{"19":2,"21":2}}],["file=fibonacci",{"2":{"19":4,"21":4}}],["files",{"2":{"19":2,"21":3}}],["file",{"2":{"9":2}}],["flag",{"2":{"3":1}}],["functionalities",{"2":{"15":1}}],["functionality",{"2":{"13":1}}],["function",{"2":{"3":1}}],["from",{"2":{"3":1,"9":2}}],["folder",{"2":{"9":2}}],["followed",{"2":{"17":1}}],["following",{"2":{"5":1,"9":1}}],["follow",{"2":{"3":1,"4":1}}],["format",{"2":{"3":1}}],["formats",{"2":{"3":1}}],["for",{"0":{"7":1,"8":1,"20":1},"2":{"3":3,"5":1,"7":1,"8":1,"9":4,"13":1,"14":1,"15":1,"17":4,"18":1,"21":1}}],["your",{"2":{"4":1,"7":1,"8":1,"9":5,"21":1}}],["you",{"2":{"3":5,"7":1,"8":1,"9":2,"10":3,"16":1,"18":1,"21":1}}],["run",{"2":{"19":2,"21":4}}],["running",{"2":{"10":1}}],["rust",{"2":{"3":1}}],["refer",{"2":{"19":1,"21":1}}],["required",{"2":{"18":1}}],["requiring",{"2":{"14":1}}],["re",{"2":{"10":1}}],["recommended",{"2":{"7":1,"8":1}}],["recursive",{"2":{"3":1}}],["read",{"2":{"3":1}}],["reload",{"2":{"9":1}}],["reliable",{"2":{"3":1}}],["releases",{"2":{"7":2,"8":2}}],["release",{"2":{"3":1}}],["repository",{"2":{"3":1,"16":1,"19":1,"21":2}}],["resource",{"2":{"3":1}}],["resourcedescriptionmadara",{"2":{"3":1}}],["resources",{"0":{"3":1}}],["both",{"2":{"15":2,"18":1,"20":1}}],["bookthis",{"2":{"3":1}}],["bootloader",{"2":{"3":1}}],["bash",{"2":{"9":2,"21":2}}],["bashrc",{"2":{"9":3}}],["based",{"2":{"4":1}}],["but",{"2":{"7":1,"8":1}}],["binary",{"0":{"18":1},"1":{"19":1,"20":1,"21":1},"2":{"13":1,"14":1,"19":1}}],["binaries",{"0":{"6":1,"9":1,"19":1},"1":{"7":1,"8":1,"10":1},"2":{"3":1,"4":1,"5":1,"7":4,"8":4,"9":3,"10":1,"15":1,"18":1,"19":1}}],["bin",{"2":{"7":10,"8":10,"9":5,"21":2}}],["by",{"2":{"3":1,"10":1,"17":1}}],["beetwen",{"2":{"3":1}}],["be",{"2":{"3":3,"9":2,"19":1,"21":1}}],["blockstone",{"2":{"3":1}}],["echo",{"2":{"19":1,"21":1}}],["entrypoint",{"2":{"21":2}}],["environment",{"2":{"18":1}}],["environments",{"2":{"13":1,"15":1}}],["ensures",{"2":{"9":1}}],["ensure",{"2":{"9":1,"21":1}}],["e",{"2":{"9":1}}],["ethereum",{"2":{"3":1}}],["evm",{"2":{"3":2}}],["either",{"2":{"3":1}}],["each",{"2":{"3":1,"17":1}}],["exec",{"2":{"21":2}}],["executed",{"2":{"9":1}}],["executable",{"2":{"7":1,"8":1}}],["execution",{"2":{"3":1}}],["executing",{"2":{"3":1}}],["export",{"2":{"9":1}}],["expected",{"2":{"3":1}}],["examples",{"2":{"17":1}}],["example",{"0":{"0":1},"2":{"0":1,"2":1,"19":2,"21":1}}],["ideal",{"2":{"13":1}}],["image",{"0":{"13":1,"14":1,"15":1},"2":{"17":3,"20":1}}],["images",{"0":{"11":1,"12":1,"16":1,"17":1,"20":1},"1":{"12":1,"13":2,"14":2,"15":2,"16":1,"17":1},"2":{"11":2,"16":1}}],["io",{"2":{"7":2,"8":2,"17":6,"19":1,"20":2,"21":5}}],["if",{"2":{"3":1,"7":1,"8":1,"9":1,"10":1}}],["its",{"2":{"11":1}}],["it",{"2":{"3":1,"18":1}}],["information",{"2":{"10":1}}],["includes",{"2":{"18":1,"20":1}}],["include",{"2":{"9":1}}],["into",{"2":{"3":1}}],["integrity",{"2":{"3":2}}],["in",{"2":{"3":1,"9":4,"16":1,"19":1,"21":1}}],["input",{"2":{"3":1,"19":4,"21":4}}],["installed",{"2":{"21":1}}],["installing",{"2":{"18":1}}],["install",{"0":{"6":1},"1":{"7":1,"8":1},"2":{"4":1}}],["installation",{"0":{"4":1,"10":1},"1":{"5":1,"6":1,"7":1,"8":1,"9":1,"10":1},"2":{"10":2,"19":1,"21":1}}],["instructions",{"2":{"3":1,"4":1,"21":1}}],["inside",{"2":{"3":1}}],["is",{"2":{"2":1,"3":8,"7":1,"8":1,"10":1,"13":1,"21":1}}],["other",{"2":{"9":1}}],["or",{"2":{"9":2,"10":1}}],["open",{"2":{"9":1}}],["operating",{"2":{"4":1}}],["optional",{"2":{"7":2,"8":2}}],["o",{"2":{"7":2,"8":2}}],["os",{"2":{"4":1}}],["out",{"2":{"19":1,"21":1}}],["output",{"2":{"3":1}}],["our",{"2":{"3":1}}],["only",{"2":{"3":1,"13":2,"14":2}}],["on",{"2":{"3":3,"4":2,"11":1,"21":1}}],["official",{"2":{"21":1}}],["of",{"2":{"0":1,"2":2,"3":8,"11":1}}],["amp",{"2":{"19":2,"21":6}}],["at",{"2":{"19":1,"21":1}}],["after",{"2":{"10":1}}],["app",{"2":{"21":4}}],["apply",{"2":{"9":1}}],["apithis",{"2":{"3":1}}],["actually",{"2":{"8":1}}],["accessing",{"0":{"16":1}}],["accessed",{"2":{"9":1}}],["access",{"2":{"7":1,"8":1}}],["add",{"2":{"9":2}}],["adding",{"0":{"9":1},"1":{"10":1},"2":{"7":1,"8":1}}],["adapter",{"2":{"3":1}}],["adapterstark",{"2":{"3":1}}],["air",{"2":{"7":10,"8":10,"10":2,"17":4,"19":4,"20":2,"21":4}}],["available",{"0":{"12":1},"1":{"13":1,"14":1,"15":1},"2":{"5":1,"7":1,"8":1,"11":1,"19":1}}],["along",{"2":{"4":1}}],["arm64",{"0":{"7":1},"2":{"5":1,"7":2}}],["architectures",{"0":{"5":1},"2":{"5":1}}],["architecture",{"2":{"4":1}}],["are",{"2":{"3":1,"5":1,"11":1,"17":1}}],["about",{"2":{"3":1}}],["as",{"2":{"3":1}}],["a",{"0":{"19":1,"21":1},"2":{"3":9,"18":1,"21":1}}],["annotations",{"2":{"3":1}}],["and",{"0":{"6":1,"19":1,"21":1},"1":{"7":1,"8":1},"2":{"3":9,"4":2,"7":1,"8":1,"9":1,"11":2,"15":2,"18":1,"20":1}}],["anywhere",{"2":{"9":1}}],["any",{"2":{"3":1,"9":2}}],["an",{"2":{"0":1,"2":1,"17":1}}],["public",{"2":{"19":2,"21":2}}],["pull",{"2":{"17":5,"20":1}}],["pulling",{"0":{"17":1}}],["please",{"2":{"19":1}}],["placing",{"2":{"10":1}}],["placed",{"2":{"9":1}}],["perfect",{"2":{"14":1}}],["private",{"2":{"19":2,"21":2}}],["prefer",{"2":{"9":1}}],["proofs",{"2":{"3":2}}],["proof",{"0":{"18":1,"19":1,"21":1},"1":{"19":1,"20":1,"21":1},"2":{"3":7,"18":1,"19":6,"21":7}}],["programs",{"2":{"3":3}}],["provided",{"2":{"18":1}}],["provides",{"2":{"3":2,"4":1,"11":1}}],["proving",{"2":{"3":1,"13":1,"15":1}}],["prove",{"2":{"3":1}}],["prover",{"0":{"13":1},"2":{"3":5,"7":5,"8":5,"10":1,"11":1,"13":1,"15":1,"17":4,"19":4,"20":3,"21":9}}],["project",{"2":{"3":1}}],["package",{"2":{"20":1}}],["packages",{"2":{"11":1,"16":2}}],["packaging",{"0":{"0":1,"1":1,"2":1,"3":1,"4":1},"1":{"5":1,"6":1,"7":1,"8":1,"9":1,"10":1},"2":{"0":1,"2":2,"7":2,"8":2,"17":3,"19":3,"20":1,"21":6}}],["path=",{"2":{"9":1}}],["path",{"0":{"9":1},"1":{"10":1},"2":{"7":1,"8":1,"9":2,"10":1}}],["params",{"2":{"19":1,"21":1}}],["parameter",{"2":{"19":1,"21":1}}],["parser",{"2":{"3":1}}],["parserthis",{"2":{"3":1}}],["parse",{"2":{"3":2}}],["part",{"2":{"3":1}}],["page",{"2":{"2":1}}],["tmp",{"2":{"19":2,"21":3}}],["test",{"0":{"19":1,"21":1},"2":{"19":2,"21":3}}],["translate",{"2":{"3":1}}],["transactions",{"2":{"3":1}}],["through",{"2":{"18":1}}],["three",{"2":{"11":1}}],["that",{"2":{"3":2,"9":3}}],["there",{"2":{"11":1}}],["then",{"2":{"9":1,"10":1}}],["them",{"2":{"3":1,"9":1}}],["these",{"2":{"3":1}}],["the",{"0":{"9":1,"16":1,"17":1,"18":1},"1":{"10":1,"19":1,"20":1,"21":1},"2":{"2":1,"3":19,"4":1,"5":1,"7":4,"8":4,"9":5,"10":4,"11":1,"13":1,"14":1,"15":1,"16":2,"17":5,"18":3,"19":8,"20":2,"21":7}}],["this",{"2":{"2":1,"3":3,"4":1,"7":1,"8":1,"9":2,"18":1}}],["top",{"2":{"3":1}}],["to",{"0":{"9":1},"1":{"10":1},"2":{"0":1,"2":1,"3":9,"4":1,"7":3,"8":3,"9":6,"11":1,"17":1,"18":1,"19":4,"21":3}}],["hosted",{"2":{"11":1}}],["hope",{"2":{"10":1}}],["how",{"2":{"0":1,"2":1,"4":1,"18":1}}],["https",{"2":{"7":2,"8":2,"19":1,"21":1}}],["help",{"2":{"10":2}}],["helps",{"2":{"3":1}}],["here",{"2":{"0":1,"2":1,"17":1}}],["simplify",{"2":{"11":1}}],["smilling",{"2":{"10":1}}],["save",{"2":{"9":1}}],["safe",{"2":{"3":1}}],["shell",{"2":{"9":2}}],["suitable",{"2":{"15":1}}],["successfully",{"2":{"19":1,"21":1}}],["successful",{"2":{"10":1}}],["sudo",{"2":{"7":2,"8":6}}],["supported",{"0":{"5":1},"2":{"3":1}}],["source",{"2":{"9":2}}],["so",{"2":{"4":1}}],["system",{"0":{"9":1},"1":{"10":1},"2":{"4":1,"7":1,"8":1,"9":2}}],["split",{"2":{"3":1}}],["specifically",{"2":{"3":1}}],["sdk",{"2":{"3":3}}],["sdkis",{"2":{"3":1}}],["see",{"2":{"10":1}}],["serializing",{"2":{"3":1}}],["server",{"2":{"3":2}}],["sequencer",{"2":{"3":1}}],["setting",{"2":{"18":1}}],["setups",{"2":{"14":1}}],["set",{"2":{"3":2}}],["steps",{"2":{"18":1}}],["step",{"2":{"7":1,"8":1,"9":1}}],["string",{"2":{"3":1}}],["stark",{"2":{"3":3}}],["starkware",{"2":{"3":1}}],["starknet",{"2":{"3":4}}],["started",{"0":{"1":1}}],["stone",{"0":{"0":1,"1":1,"2":1,"3":1,"4":1,"9":1,"11":1,"18":1},"1":{"5":1,"6":1,"7":1,"8":1,"9":1,"10":2,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"19":1,"20":1,"21":1},"2":{"0":1,"2":2,"3":6,"4":1,"5":1,"7":2,"8":2,"11":1,"13":1,"14":1,"15":1,"16":2,"17":5,"18":1,"19":3,"20":3,"21":8}}],["s",{"2":{"0":1,"2":1,"9":1,"21":1}}]],"serializationVersion":2}
